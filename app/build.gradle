apply plugin: 'com.android.application'

apply plugin: 'kotlin-android'

apply plugin: 'kotlin-android-extensions'

apply plugin: 'kotlin-kapt'

apply plugin: "androidx.navigation.safeargs.kotlin"

android {
    compileSdkVersion 29
    buildToolsVersion "29.0.2"

    dataBinding {
        enabled = true
    }

    defaultConfig {
        applicationId "com.bozin3.cryptostocks"
        minSdkVersion 21
        targetSdkVersion 29
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_1_8.toString()
    }

}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation 'androidx.appcompat:appcompat:1.0.2'
    implementation 'androidx.core:core-ktx:1.0.2'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test.ext:junit:1.1.0'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.1.1'

    // Constraint layout
    def constraintLayoutVersion = "1.1.3"
    implementation "androidx.constraintlayout:constraintlayout:$constraintLayoutVersion"

    // Navigation
    def nav_version = "2.1.0"
    implementation "androidx.navigation:navigation-fragment-ktx:$nav_version"
    implementation "androidx.navigation:navigation-ui-ktx:$nav_version"

    // Lifecycle
    def lifeCycleLibVersion = "2.2.0-alpha01"
    implementation "androidx.lifecycle:lifecycle-extensions:$lifeCycleLibVersion"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifeCycleLibVersion"
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$lifeCycleLibVersion"

    // Coroutines
    def coroutineVersion = "1.1.0"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutineVersion"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutineVersion"
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$lifeCycleLibVersion"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:2.1.0-beta01"

    // Networking
    def retrofitVersion = "2.6.0"
    implementation "com.squareup.retrofit2:retrofit:$retrofitVersion"
    implementation "com.squareup.retrofit2:converter-moshi:$retrofitVersion"

    // Moshi JSON parser
    def moshiVersion = "1.8.0"
    implementation "com.squareup.moshi:moshi:$moshiVersion"
    implementation "com.squareup.moshi:moshi-kotlin:$moshiVersion"

    // Room database
    def room_version = "2.1.0-alpha06"
    implementation "androidx.room:room-runtime:$room_version"
    kapt "androidx.room:room-compiler:$room_version"
    implementation "androidx.room:room-ktx:$room_version"

    // Leak Cannary - tool for detecting memory leaks
    debugImplementation 'com.squareup.leakcanary:leakcanary-android:2.1'

    // Timber - logging tool
    def timberVersion = "4.7.1"
    implementation "com.jakewharton.timber:timber:$timberVersion"

    // Stetho - i use it to see local db allData in chrome dev ops
    implementation 'com.facebook.stetho:stetho:1.5.1'
}
